import client from './redis.js';
import { Server } from 'socket.io';
let socketIO;
var sockets = {};
export const socketConnection = (server, app) => {
    socketIO = new Server(server, {
        cors: {
          origin: ["http://localhost:3001", "http://127.0.0.1:3001","http://143.110.254.245:9006"]
        }
      });
    socketIO.on('connection', (socket) => {
        const user = { socketC: socket };
        console.log(`âš¡: ${socket.id} user just connected!`);
        // socket.join(socket.id)
        socket.on('connected', (userId) => {
            console.log('IDS',userId);
            sockets[userId] = socket.id;
            // Save the socket id to Redis so that all processes can access it.
            client.hmset('mastersocket', sockets, function(err) {
                if (err) {
                    throw err;
                }
                console.log(`Master socket is now${  socket.id}`);
            });
            console.log('UserIddd', userId);
            // The socket ID is stored along with the unique ID generated by the client
            app.set('sockets', sockets);

            //sockets.push(socket.id);
            console.log('socks', sockets);
            // console.log('socks users', getSocketUser());
            // The sockets object is stored in Express so it can be grabbed in a route
        });
        socket.on('success', (data) => {
            console.log('tttttttttttttttttttfyj', data.username);
            socket.broadcast.emit('login', data);
        });
        socket.on('disconnect', () => {
            console.log('ðŸ”¥: A user disconnected');
            delete sockets[socket.id];
        });
        socket.on('Shutdown', () => {
            //exit(0);
        });
        socket.on('disconnected', (id) => {
            console.log(': A user disconnected' + id);
            delete sockets[socket.id];
            if (id) {
              client.hdel('mastersocket', [id ? id : 9], function (err) {
                if (err) {
                  throw err;
                }
                // client.hdel('loggedinip', [userid ? userid : 9], function (err) {
                //   if (err) {
                //     throw err;
                //   }
                // });
              });
            }
          });
        socket.on('loading',(data)=>{
            console.log('Loading....',data)
        })
        socket.on('dashboard',(data)=>{
            console.log('Dashboard of:',data)
        })
      
        socket.on('error', function(err) {
            console.log("Socket.IO Error");
            console.log(err.stack); // this is changed from your code in last comment
        });

    });
    app.set("io", socketIO);
    app.set('sockets', sockets);


    return socketIO;
};
export const getSocketIo = () => {
    return socketIO;
};

export const getSocketUser = (fn) => {
    // return sockets;
    client.hgetall('mastersocket', (err, obj) => {
        if (err) {
            throw err;
        }
        console.log('DEDIS', obj);
        fn(obj);
    });
};
export const notifyAll = (data) => {
    console.log(data);
    socketIO.socket.on('course', data);
};
